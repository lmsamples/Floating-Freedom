@model IEnumerable<FloatingFreedom.Models.Kayak>
@using Microsoft.AspNetCore.Identity
@{
	ViewData["Title"] = "Index";
}

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{

}
@if (SignInManager.IsSignedIn(User))
{

	<h1>Kayaks</h1>

	<p>
		<a asp-action="Create">Create New</a>
	</p>
	<table class="table">
		<thead>
			<tr>
				<th>
					@Html.DisplayNameFor(model => model.Name)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.KayakType)
				</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model)
			{
				<tr>
					<td>
						@Html.DisplayFor(modelItem => item.Name)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.KayakType.Name)
					</td>
					<td>
						<a asp-action="Edit" class="btn btn-warning p-1" asp-route-id="@item.Id">Edit</a>
						<a asp-action="Details" class="btn btn-secondary p-1"  asp-route-id="@item.Id">Details</a>
						<a asp-action="Delete" class="btn btn-danger p-1" asp-route-id="@item.Id">Delete</a>
					</td>
				</tr>
			}
		</tbody>
	</table>
}


else
{
<p>Please <a asp-area="Identity" asp-page="/Account/Login">Log in</a> to access this page.</p>
}
@section Scripts {
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}